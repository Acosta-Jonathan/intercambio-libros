from sqlalchemy import create_engine
from sqlalchemy.orm import sessionmaker, Session
from models.user import User
from models.base import Base
from auth_utils import hash_password  # ‚úÖ Importar la funci√≥n de hashing

# URL de conexi√≥n a la base de datos (aj√∫stala seg√∫n tu configuraci√≥n)
DATABASE_URL = 'postgresql://postgres:root@localhost:5432/intercambio_libros?client_encoding=utf8'

# Configuraci√≥n del motor de SQLAlchemy
engine = create_engine(DATABASE_URL)

# Crea una sesi√≥n para interactuar con la base de datos
SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)

# Crear las tablas en la base de datos (si no existen)
def init_db():
    Base.metadata.create_all(bind=engine)

# Dependencia para obtener la sesi√≥n en los endpoints
def get_db():
    db = SessionLocal()
    try:
        yield db
    finally:
        db.close()

# ‚úÖ Corregido: Ahora se almacena la contrase√±a hasheada
def create_user(db: Session, user: UsuarioCreate):
    hashed_password = hash_password(user.password)  # üî• Hashear la contrase√±a antes de guardarla
    db_user = Usuario(username=user.username, email=user.email, password=hashed_password)  # Guardar hash en la BD
    db.add(db_user)
    db.commit()
    db.refresh(db_user)  # Obtener el objeto con el ID asignado por la base de datos
    return db_user
